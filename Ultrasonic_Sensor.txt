The basic operation code for the buzzer is located in the folder named ArduinoCode/Ultrasonic_Sensor_HC-SR04 on OneDrive. It is also included in this document.


- CODE:
const int triggerPin = 9;
const int echoPin = 10;
float pulse_width, distance;
float wall;
float range = 5.0;

void setup() {
  // put your setup code here, to run once:
  pinMode(triggerPin, OUTPUT);
  pinMode(echoPin, INPUT);
  Serial.begin(9600);
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);

  // Distance to the wall
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pulse_width = pulseIn(echoPin, HIGH);
  wall = (pulse_width*.0343)/2; //measure in cm, divided by 2 cause sounds goes and comes back
  Serial.print("Distance to the wall = ");
  Serial.print(wall);
  Serial.println(" cm");
  delay(500);
}

void loop() {
  // put your main code here, to run repeatedly:
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pulse_width = pulseIn(echoPin, HIGH);
  distance = (pulse_width*.0343)/2; //measure in cm, divided by 2 cause sounds goes and comes back
  if (distance > (wall+range) || distance < (wall-range)){
    Serial.print("Intruder detected at = ");
    Serial.print(distance);0
    Serial.println(" cm");
    wall = distance;
    Serial.print("New wall measure = "); // Update the wall measure
    Serial.print(wall);
    Serial.println(" cm");
  }

  delay(3000);
}


- TEST:

To verify the demo code's functionality, a large object was placed at a fixed distance for the sensor to detect and assign as the "wall" variable. Once this variable was set, another object was placed in between or the first object was moved away to test for intruder detection. Upon intruder detection, it was notified, and the "wall" variable was reassigned with the distance detected under the "intruder" variable.

This testing was repeated several times and in various setups to ensure consistent detection of intruders at the appropriate times and to avoid incorrect detections.


- PROBLEMS AND SOLUTIONS:

No issues were encountered during the sensor programming, as there was substantial information available about it, and the foundational codes obtained produced sensible and reasonably stable readings, with variations of a few millimeters.